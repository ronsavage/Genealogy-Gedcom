<html>
<head>
<title><: $title :></title>
</head>
<body>

<h1 align="center">State Transition Table for Genealogy::Gedcom::Reader V <: $version :></h1>

<p>This is the STT for GEDCOM 5.5.1, as recognized by 
<a href="http://search.cpan.org/perldoc?Genealogy%3A%3AGedcom%3A%3AReader">Genealogy::Gedcom::Reader</a> V <: $version :>.</p>

<p>This table has been exported from an OpenOffice Calc spreadsheet as a CSV file,
with the latter being incorporated into this HTML.</p>

<p>The lexer which reads the STT does not use the last 2 columns, Regexp and Interpretation.<p>

<p>The Regexp column is referred to in the spreadsheet by formulas, and the Interpretation column is just for the reader.</p>

<p>Genealogy::Gedcom::Reader::Lexer reads this STT, and outputs tokens in an intermediary language.</p>

<p>The STT is actually at the end of Lexer.pm, but options to new() allow you to override that source for the STT.</p>

<p>The lexer uses <a href="http://search.cpan.org/perldoc?Set%3A%3AFA%3A%3AElement">Set::FA::Element</a> to actually process the GEDCOM definition.</p>

<p>Genealogy::Gedcom::Reader::Parser reads lexed tokens and builds a data structure in memory representing the input stream.</p>

: include "rainbow.table.tx" { table => $table };

</body>
</html>
